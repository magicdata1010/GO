https://github.com/a8m/golang-cheat-sheet   -  good cheat sheet overview
package main

func main(){

	add=func (a,b int) (int){
		return a+b

	}
}

error -  undeclared add indentifier 
how to pass lots of prameter in golang function fun like in python ? https://stackoverflow.com/questions/23447217/go-named-arguments#:~:text=There%20is%20no%20direct%20equivalent,can%20make%20your%20function%20variadic.
ans of 13 is we can use variadic functions too in golng to equal *args of python
1. how to get len of array in go ? len(array)
2. hw to call another function ? 
3. is arg and args keyword in go ? https://www.geeksforgeeks.org/command-line-arguments-in-golang/
4. find error with this code  - 
 package main

func traverse(ar ...[]int) []int {

	for i := 0; i < len(ar); i++ {
		println(ar[i], "kk")

	}
	return ar
}

func main() {

	add := func(a, b int) int {
		return a + b

	}
	{
		println(add(2, 3))
	}
	s := traverse(1)
	println(s)
}

error - [{
	"resource": "/C:/Users/91838/go_testing.go",
	"owner": "_generated_diagnostic_collection_name_#0",
	"code": {
		"value": "IncompatibleAssign",
		"target": {
			"$mid": 1,
			"external": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#IncompatibleAssign",
			"path": "/golang.org/x/tools/internal/typesinternal",
			"scheme": "https",
			"authority": "pkg.go.dev",
			"fragment": "IncompatibleAssign"
		}
	},
	"severity": 8,
	"message": "cannot use ar (variable of type [][]int) as []int value in return statement",
	"source": "compiler",
	"startLineNumber": 9,
	"startColumn": 9,
	"endLineNumber": 9,
	"endColumn": 11
	
	5. how to pass list argument and return list in a func in go ? https://stackoverflow.com/questions/21719769/passing-an-array-as-an-argument-in-golang
}]
6. package main

func traverse(ar ...[]int) []int {

	for i := 0; i < len(ar); i++ {
		println(ar[i], "kk")

	}
	return ar[0]
}

func main() {

	add := func(a, b int) int {
		return a + b

	}
	{
		println(add(2, 3))
	}
	s := traverse(1)
	println(s)
}
 error - .\go_testing.go:21:16: cannot use 1 (untyped int constant) as []int value in argument to traverse 
 solution - 
 6. https://github.com/shapeshed/golang-book-examples  -  good examples of that book
 7. how to pass array argument in function - https://www.geeksforgeeks.org/how-to-pass-an-array-to-a-function-in-golang/
 8. can we directly crreate array in function argument ? like lambda in python ?
 9. diff btw slice and array in go ? 
 10. diff btw make and new keyword in golang ?
 11. https://go.dev/tour/list  - tour of go
 12. vertex framework in golang - google for rest api
 13. python dictionary equivalent in go - https://stackoverflow.com/questions/40254007/go-equivalent-of-pythons-dictionary
 14. can we add memeory adress by 1 ? &s + 1 ?  is it possible ? https://stackoverflow.com/questions/68321230/how-do-i-declare-a-pointer-at-a-specific-memory-address-in-go-golang-and-store-a
 15. how to create pointer in golang ? https://stackoverflow.com/questions/68321230/how-do-i-declare-a-pointer-at-a-specific-memory-address-in-go-golang-and-store-a
 16. wt is **p in golang ?
 17 hw ti take user inout  - https://www.w3schools.com/go/go_input.php
 18.  error -[{
	"resource": "/C:/Users/91838/go_testing.go",
	"owner": "_generated_diagnostic_collection_name_#7",
	"code": {
		"value": "MissingReturn",
		"target": {
			"$mid": 1,
			"external": "https://pkg.go.dev/golang.org/x/tools/internal/typesinternal#MissingReturn",
			"path": "/golang.org/x/tools/internal/typesinternal",
			"scheme": "https",
			"authority": "pkg.go.dev",
			"fragment": "MissingReturn"
		}
	},
	"severity": 8,
	"message": "missing return",
	"source": "compiler",
	"startLineNumber": 52,
	"startColumn": 1,
	"endLineNumber": 52,
	"endColumn": 3
}]
 func element_find(n *int, ar []int) (int, string) {
	//n=&ar[0]
	for i, e := range ar {
		if *n == ar[i] {
			return i, "found"
			//break

		}

	}
	// return
}
20. https://stackoverflow.com/questions/20099144/provide-function-return-from-an-if-statement-issues
21. y import state,ent goes away in vs code ?  https://stackoverflow.com/questions/48124565/why-does-vscode-delete-golang-source-on-save
22. array slicing in golang ? https://www.programiz.com/golang/slice
23. hw to print a slice in golang ?  https://www.programiz.com/golang/slice
24. func split_array(list [5]int) {

	c := &list
	println(*c)
}

err -  illegal types for operand: print
	[5]int
	
solution  - use fmt.Println  insead of println
25. hw to traverse memories using pointer ?
func split_array(list [5]int) {
    var c * [5]int
	c = &list
	fmt.Println(&c[3], "ggg")
}

26 after referencing are these memory address is same ? yes look at the output of &c and &list
func split_array(list [5]int) {
    var c * [5]int
	c = &list
	fmt.Println(*(&c[0]),&list[1], "ggg")
}

27. idiomatic go  -  https://go.dev/doc/effective_go
28. panic in functions ? --
29. insert element in array  go ?
30 memory and garbage collection of data structures in go ? book the way to go 
31. diff btw insert and append ? https://dev.to/andyhaskell/a-closer-look-at-go-s-slice-append-function-3bhb
32. can we only append in slice and not array ? yes 
33. fmt.Println(c[0],&list[1],t, "ggg")
    *(&c[0])=c[3]
	fmt.Println(c[0],c[3],"ll")
	
34. we cannot interchange memory addresss  - &c[0] =&c[2]
35.can we do c[-1] like in python? no  err -invalid argument: index -1 (constant of type int) must not be negative
36. solution for 35  -  https://yourbasic.org/golang/last-item-in-slice/#:~:text=Use%20the%20index%20len(a,a%20slice%20or%20array%20a%20.
37. invalid operation: cannot index pointer (variable of type *[]int)  ,  we cannot do this on a slice  -  pointer := &rev , where rev []int 
38. diff btw pointer in c and pointer in golang ?  https://getliner.com/picked-by-liner/reader-mode?url=https%3A%2F%2Fdave.cheney.net%2F2014%2F03%2F17%2Fpointers-in-go
39. https://www.youtube.com/watch?v=1YEufRd3_Fk  ,  if we change values of same referenced pointers both pointers value  will change.
ex -  pointer:=rev[pos]
*(&pointer[len(rev)-(pos+1)]) = rev[pos]
op - [1 3 4 6] &[1 3 4 6] uu
0 1 6 oo
1 oooo
[1 3 4 1] &[1 3 4 1] uu

40.






	
	
	
 
